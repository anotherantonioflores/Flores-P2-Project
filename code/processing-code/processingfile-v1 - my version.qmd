---
title: "Preparing data for analysis"
author: "Antonio Flores"
date: "2024-13-06"
output: html_document
---


# Setup

The following packages are needed for this data processing

```{r}
#| echo: false
#| output: false
library(readxl) 
library(dplyr) 
library(tidyr) 
library(skimr) 
library(here) 
```


# Data loading

```{r}
data_location <- here::here("data","raw-data","bank-full.csv")
rawdata <- read.csv(data_location, header = TRUE, sep=";")
```


# Check data

Examining metadata by accessing the codebook.
This codebook was taken directly from the data repository housing the chosen dataset.
The decision was made to keep this in a separate xlsx file from the dataset so that the dataset could remain in the identical form in which it was sourced (CSV format).

```{r}
codebook_location <- 
here::here("data","raw-data","codebook.xlsx")

codebook <- readxl::read_excel(codebook_location, sheet ="Codebook")
print(codebook)
```


Various ways of looking at the data

```{r}
dplyr::glimpse(rawdata)
summary(rawdata)
head(rawdata)
skimr::skim(rawdata)
```


# Cleaning the data

We are mainly converting character variables into factors so we can do some categorical analysis.
I had initially included converting months to a numeric variable but realized that it was fine as a factor variable.
```{r}
d1 = rawdata |> 
  mutate(job = as.factor(job)) |>
  mutate(marital = as.factor(marital)) |>
  mutate(education = as.factor(education)) |>
  mutate(default = as.factor(default)) |>
  mutate(housing = as.factor(housing)) |>
  mutate(loan = as.factor(loan)) |>
  mutate(education = as.factor(education)) |>
  mutate(contact = as.factor(contact)) |>
  mutate(month = as.factor(month)) |>
  mutate(poutcome = as.factor(poutcome)) |>
  mutate(day = as.factor(day)) |>
  mutate(y = ifelse(y == "yes", 1, 0))


colnames(d1)[17] <- "y_termSubscribed"


summary(d1)
```


All done, data is clean now. 

Assigning data to output variable.

```{r}
processeddata1 <- d1
```


# Save data 

```{r}
save_data_location <- here::here("data","processed-data","processeddata1.rds")
saveRDS(processeddata1, file = save_data_location)
```
